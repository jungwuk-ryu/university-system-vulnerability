package com.developer.jungwuk;

import okhttp3.*;

import java.io.IOException;

public class Parser {

    public String getData(String sId) {
        OkHttpClient client = new OkHttpClient().newBuilder()
                .build();
        MediaType mediaType = MediaType.parse("application/x-www-form-urlencoded; charset=UTF-8");
        RequestBody body = RequestBody.create(mediaType, Secrets.getBodyContent(sId));
        Request request = new Request.Builder()
                .url(Secrets.BASE_URL)
                .method("POST", body)
                .addHeader("Accept", "*/*")
                .addHeader("Accept-Language", "ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7,zh-CN;q=0.6,zh-MO;q=0.5,zh;q=0.4")
                .addHeader("Connection", "keep-alive")
                .addHeader("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8")
                .addHeader("Sec-Fetch-Dest", "empty")
                .addHeader("Sec-Fetch-Mode", "cors")
                .addHeader("Sec-Fetch-Site", "same-site")
                .addHeader("User-Agent", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36")
                .addHeader("sec-ch-ua", "\"Not)A;Brand\";v=\"99\", \"Google Chrome\";v=\"127\", \"Chromium\";v=\"127\"")
                .addHeader("sec-ch-ua-mobile", "?0")
                .addHeader("sec-ch-ua-platform", "\"macOS\"")
                .build();
        try {
            Response response = client.newCall(request).execute();
            return response.body().string();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    public String processXMLData(String xmlData) throws ArrayIndexOutOfBoundsException {
        // 필요한 데이터 추출
        try {
            String university = xmlData.split(Secrets.T_UNIV)[1].split("<")[0];
            String department = xmlData.split(Secrets.T_DEP)[1].split("<")[0];
            String studentID = xmlData.split(Secrets.T_SID)[1].split("<")[0];
            String studentName = xmlData.split(Secrets.T_NAME)[1].split("<")[0];
            String janghak = xmlData.split(Secrets.T_JANGHAK)[1].split("<")[0];


            String result = String.format(
                    "대학: \"%s\", 학과: \"%s\", 학번: \"%s\", 이름: \"%s\", 장학금 : \"%s\"",
                    university, department, studentID, studentName, janghak
            );

            if (studentName.isEmpty()) return null;

            return result;
        } catch (Exception e) {
            return null;
        }
    }

    public static void main(String[] args) {
        Parser processor = new Parser();

        for (int sId = 2023000000; sId < 2023999999; sId++) {
            String xmlData = processor.getData(Integer.toString(sId));

            try {
                String data = processor.processXMLData(xmlData);

                if (data != null) {
                    System.out.println(data);
                }

                try {
                    Thread.sleep(500);
                } catch (InterruptedException e) {
                    throw new RuntimeException(e);
                }
            } catch (NullPointerException e) {
            }
        }
    }

}
